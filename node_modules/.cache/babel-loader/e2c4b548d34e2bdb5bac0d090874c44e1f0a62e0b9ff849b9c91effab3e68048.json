{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web\\\\SultanShopInteriorGoods\\\\src\\\\components\\\\Breadcrumbs\\\\Breadcrumbs.js\";\nimport React from 'react';\nimport { Breadcrumbs as MUIBreadcrumbs, Link, Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport './_Breadcrumbs.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Breadcrumbs = props => {\n  const {\n    history,\n    location: {\n      pathname\n    }\n  } = props;\n  function breadcrumbTitle() {\n    if (pathname.includes('product')) {\n      return props.productTitle;\n    } else if (pathname.includes('cart')) {\n      return 'Кошик';\n    }\n  }\n  function getPathnames() {\n    if (!pathname.includes('product')) {\n      return pathname.split('/').filter(x => x);\n    } else {\n      return [pathname];\n    }\n  }\n  const pathnames = getPathnames();\n  function updateProductsHandler() {\n    props.onUpdateProductList();\n    history.push('/');\n  }\n  return !pathname.includes('sultan-shop_for_internship') && /*#__PURE__*/_jsxDEV(MUIBreadcrumbs, {\n    className: \"breadcrumbsCustomStyle\",\n    \"aria-label\": \"breadcrumb\",\n    children: [pathnames.length > 0 ? /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      onClick: updateProductsHandler,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"breadcrumbs breadcrumbs_active\",\n        children: \"\\u041A\\u0430\\u0442\\u0430\\u043B\\u043E\\u0433\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"breadcrumbs\",\n      children: [\"\\u041A\\u0430\\u0442\\u0430\\u043B\\u043E\\u0433 \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u0422\\u043E\\u0432\\u0430\\u0440\\u0438 \\u0434\\u043B\\u044F \\u0456\\u043D\\u0442\\u0435\\u0440'\\u0454\\u0440\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this), pathnames.map((name, index) => {\n      const routeTo = `/${pathnames.slice(0, index + 1).join('/')}`;\n      const isLast = index === pathnames.length - 1;\n      return isLast ? /*#__PURE__*/_jsxDEV(Typography, {\n        className: \"breadcrumbs-next\",\n        children: breadcrumbTitle()\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => history.push(routeTo),\n        children: breadcrumbTitle()\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n_c = Breadcrumbs;\nexport default _c2 = withRouter(Breadcrumbs);\nvar _c, _c2;\n$RefreshReg$(_c, \"Breadcrumbs\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","Breadcrumbs","MUIBreadcrumbs","Link","Typography","withRouter","jsxDEV","_jsxDEV","props","history","location","pathname","breadcrumbTitle","includes","productTitle","getPathnames","split","filter","x","pathnames","updateProductsHandler","onUpdateProductList","push","className","children","length","to","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","name","index","routeTo","slice","join","isLast","_c","_c2","$RefreshReg$"],"sources":["C:/Web/SultanShopInteriorGoods/src/components/Breadcrumbs/Breadcrumbs.js"],"sourcesContent":["import React from 'react';\nimport {\n  Breadcrumbs as MUIBreadcrumbs,\n  Link,\n  Typography,\n} from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport './_Breadcrumbs.scss';\n\nconst Breadcrumbs = (props) => {\n  const {\n    history,\n    location: { pathname },\n  } = props;\n\n  function breadcrumbTitle() {\n    if (pathname.includes('product')) {\n      return props.productTitle;\n    } else if (pathname.includes('cart')) {\n      return 'Кошик';\n    }\n  }\n\n  function getPathnames() {\n    if (!pathname.includes('product')) {\n      return pathname.split('/').filter((x) => x);\n    } else {\n      return [pathname];\n    }\n  }\n  const pathnames = getPathnames();\n\n  function updateProductsHandler() {\n    props.onUpdateProductList();\n    history.push('/');\n  }\n\n  return (\n    !pathname.includes('sultan-shop_for_internship') && (\n      <MUIBreadcrumbs\n        className=\"breadcrumbsCustomStyle\"\n        aria-label=\"breadcrumb\"\n      >\n        {pathnames.length > 0 ? (\n          <Link to=\"/\" onClick={updateProductsHandler}>\n            <p className=\"breadcrumbs breadcrumbs_active\">Каталог</p>\n          </Link>\n        ) : (\n          <Typography className=\"breadcrumbs\">\n            Каталог <span>Товари для інтер'єру</span>\n          </Typography>\n        )}\n        {pathnames.map((name, index) => {\n          const routeTo = `/${pathnames.slice(0, index + 1).join('/')}`;\n          const isLast = index === pathnames.length - 1;\n          return isLast ? (\n            <Typography className=\"breadcrumbs-next\" key={name}>\n              {breadcrumbTitle()}\n            </Typography>\n          ) : (\n            <Link key={name} onClick={() => history.push(routeTo)}>\n              {breadcrumbTitle()}\n            </Link>\n          );\n        })}\n      </MUIBreadcrumbs>\n    )\n  );\n};\n\nexport default withRouter(Breadcrumbs);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}